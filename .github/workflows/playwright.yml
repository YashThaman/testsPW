name: Playwright SOX Tests

on:
  pull_request:
    branches: [main]
  push:
    branches: [main]
  workflow_dispatch:

permissions:
  contents: write
  pull-requests: write
  actions: write
  id-token: write

jobs:
  test:
    timeout-minutes: 20
    runs-on: ubuntu-latest
    permissions:
      contents: read
      pages: write
      id-token: write
    concurrency:
      group: "pages"
      cancel-in-progress: true     
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20.x'
          check-latest: false

      - name: Install dependencies
        run: yarn install --frozen-lockfile

      - name: Install Playwright Browsers
        run: yarn pw:install-browsers:ci

      - name: Run Playwright tests
        run: yarn pw:test:ci:github

      - name: Upload artifact
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: test-results
          path: test-report
          if-no-files-found: error
          retention-days: 15
      # - name: Push the new files to github pages
      #   uses: peaceiris/actions-gh-pages@v3
      #   with:
      #     github_token: ${{ secrets.GITHUB_TOKEN }}
      #     publish_dir: ./test-results # from what folder to take files. It takes only contents
      #     destination_dir: tst-resuts # a sub-directory where to publish to avoid overwriting other reports     
      # - name: Write URL in summary
      #   run: echo "### Test results (link available after 20 secs) -  https://yashthaman.github.io/testsPW/tst-resuts/" >> $GITHUB_STEP_SUMMARY
      - name: Setup Pages
        uses: actions/configure-pages@v5
      - name: Upload Artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: "./test-report" 
      # - name: Deploy to GitHub Pages
      #   run: |
      #      git config --global user.name "${{github.actor}}"
      #      git config --global user.email 'yash.thaman@gmail.com'
      #      git checkout --orphan gh-pages
      #      mv ./test-results/* ./
      #      git add .
      #      git commit -m "Deploying to GitHub Pages"
      #      git push origin HEAD:gh-pages --force
 
  deploy-coverage:
     needs: test
     runs-on: ubuntu-latest
     steps:
       - name: Deploy to GitHub Pages
         id: deployment
         uses: actions/deploy-pages@v4

